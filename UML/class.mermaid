classDiagram
    class Main {
        +main() void
    }

    class Game {
        -startingPlayerIndex : int
        -input : IOHandler
        -instance : Game$
        +init() void
        -Phase1() void
        -Phase2() void
        -Phase3() void
        -score() void
        -playRound() void
        +getInstance() Game
        +initNeighbors() void
        +initShipsCell() void
    }
    class Player {
        -idCounter : int$
        -id : int
        -name : String
        -score : int
        -commandsOrder : List~Command~
        -ships : Ship[]
        +Expand() void
        +Explore() void
        +Exterminate() void
        +score() void
        +getAvailableShips(n : int) Ship[]
    }
    class Command{
        <<enumeration>>
        EXPAND
        EXPLORE
        EXTERMINATE
    }
    Player o--> "0..3" Command
    class Area {
        -grid
        +neighbors_pattern$
        +sectors_pattern$
        +generate() void
    }
    class Sector {
        -id : int
        -used : bool
        -Cells : Cell[]
    }
    class Border_sector {
        -used_patterns : List~~$
        +patterns$
        +generate_system(rotate: bool) void
    }
    class Middle_sector {
        +patterns$
        +generate_system() void
        %% se rotate alÃ©atoirement
    }
    class Tri_prime {
        +generate_system() void
    }
    class System {
        -used : bool
        -id : int
        -idCounter : int$
        -level : int
    }
    class Ship {
        -idCounter : int$
        -used : bool
        -id : int
        -cellId : Integer
        -cell : Cell
        +getPlayer() Player
        +initCell() void
        +isAvailable() bool
        +getPlayer() Player
    }
    class Cell {
        -id : int
        -neighbors : Cell[]
        -system : Sytem
        +getSystem() System[]
        +getShips() Ship[]
        +getControlPlayer() Player
        +isEmpty() bool
    }

    Game *--> "2..*" Player
    Game *--> "1" Area
    Main *--> "1" Game
    Area "1" o--> "46" Cell
    Sector "1" o--> "1,4,5" Cell
    Sector <|-- Border_sector
    Sector <|-- Middle_sector
    Sector <|-- Tri_prime
    Cell "1" *--> "*" System
    Player *--> "15" Ship
    Area *--> "9" Sector
    Ship "1" o--> "0,1" Cell
    Cell "1" o--> "2..*" Cell

    class IOHandler {
        +chose_order()*
        +expand()*
        +explore()*
        +exterminate()*
        +score()*
    }
    class IOMode {
        <<enumeration>>
        CLI
        GUI
    }
    IOHandler *--> "1" IOMode
    class CLI {
        +chose_order()
        +expand()
        +explore()
        +exterminate()
        +score()
    }
    class App {
        +chose_order()
        +expand()
        +explore()
        +exterminate()
        +score()
    }
    IOHandler --> CLI
    IOHandler --> App



    class DataManipulator {
        -mapProperties : Properties
        -configProperties : Properties
        +getMapProperties() Properties
        +getConfigProperties() Properties
        -defaultMapProperties : String
        -writeDefaultProperties() Properties
        -loadMapProperties() Properties
        -loadConfig() Properties
        +getSavesList() String[]
        +loadSave() Game
        +writeSave(game : Game) void
    }
    class GameDataConverter {
        +fromJson(json : String) Game
        +toJson(game : Game) String
        -gson : Gson
    }